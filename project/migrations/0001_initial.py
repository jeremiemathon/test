# Generated by Django 4.2.7 on 2023-11-24 15:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('library', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('Not Started', 'Not Started'), ('Ongoing', 'Ongoing'), ('Ended', 'Ended')], default='Not Started', max_length=20)),
                ('confidentiality', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Very High')], default=1)),
                ('availability', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Very High')], default=1)),
                ('integrity', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Very High')], default=1)),
                ('progress', models.SmallIntegerField(default=0)),
                ('signed_off', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectRequirement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0)),
                ('reference', models.TextField(default='', max_length=20)),
                ('description', models.TextField()),
                ('comments', models.TextField(blank=True)),
                ('applicability_confidentiality', models.PositiveIntegerField(default=1)),
                ('applicability_integrity', models.PositiveIntegerField(default=1)),
                ('applicability_availability', models.PositiveIntegerField(default=1)),
                ('documents', models.ManyToManyField(blank=True, to='library.document')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectRequirementFollowUp',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('progress', models.FloatField(default=0)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.projectrequirement')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('description', models.TextField()),
                ('details', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionChoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='RequirementStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('value', models.FloatField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('color', models.CharField(default='primary', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionChoiceImpact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('impact_confidentiality', models.IntegerField(default=1)),
                ('impact_integrity', models.IntegerField(default=1)),
                ('impact_availability', models.IntegerField(default=1)),
                ('choice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='project.questionchoice')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.question')),
                ('tags', models.ManyToManyField(blank=True, to='project.questiontag')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='choices',
            field=models.ManyToManyField(through='project.QuestionChoiceImpact', to='project.questionchoice'),
        ),
        migrations.CreateModel(
            name='ProjectRequirementFollowUpComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='uploads/')),
                ('follow_up', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.projectrequirementfollowup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='projectrequirementfollowup',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.requirementstatus'),
        ),
        migrations.AddField(
            model_name='projectrequirement',
            name='tags',
            field=models.ManyToManyField(blank=True, to='project.questiontag'),
        ),
        migrations.AddField(
            model_name='project',
            name='tags',
            field=models.ManyToManyField(blank=True, to='project.questiontag'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.questionchoice')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='project.project')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.question')),
            ],
        ),
    ]
